{"version":3,"sources":["jsdelivr-header.js","/npm/startaudiocontext@1.2.1/StartAudioContext.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,CCAC,SAAU,EAAM,GACM,mBAAX,QAAyB,OAAO,IAC1C,OAAO,GAAI,GACkB,iBAAX,QAAuB,OAAO,QAC1C,OAAO,QAAU,IAEvB,EAAK,kBAAoB,IAN3B,CAQE,KAAM,WASP,IAAI,EAAc,SAAS,EAAS,GAEnC,KAAK,UAAW,EAEhB,KAAK,SAAW,EAEhB,KAAK,YAAc,KAAK,OAAO,KAAK,MACpC,KAAK,WAAa,KAAK,OAAO,KAAK,KAAM,GAEzC,EAAQ,iBAAiB,aAAc,KAAK,YAC5C,EAAQ,iBAAiB,YAAa,KAAK,aAC3C,EAAQ,iBAAiB,WAAY,KAAK,YAC1C,EAAQ,iBAAiB,UAAW,KAAK,aA4D1C,SAAS,EAAU,GACjB,MAAyB,YAAlB,EAAQ,MA4FjB,OAnJA,EAAY,UAAU,OAAS,SAAS,GACvC,KAAK,UAAW,GAMjB,EAAY,UAAU,OAAS,SAAS,GA2BxC,IAAsB,EAEjB,EACA,EA7BC,KAAK,WA4BN,GAFiB,EAzBP,GA2BO,aAAa,EAAG,EAAG,EAAQ,aAC5C,EAAS,EAAQ,sBACd,OAAS,EAChB,EAAO,QAAQ,EAAQ,aACvB,EAAO,MAAM,GAGT,EAAQ,QACX,EAAQ,UAjCT,KAAK,UAAW,GAMjB,EAAY,UAAU,QAAU,WAC/B,KAAK,SAAS,oBAAoB,aAAc,KAAK,YACrD,KAAK,SAAS,oBAAoB,YAAa,KAAK,aACpD,KAAK,SAAS,oBAAoB,WAAY,KAAK,YACnD,KAAK,SAAS,oBAAoB,UAAW,KAAK,YAClD,KAAK,YAAc,KACnB,KAAK,WAAa,KAClB,KAAK,SAAW,MA4FjB,SAA2B,EAAS,EAAU,GAG7C,IAAI,EAAU,IAAI,QAAQ,SAAS,GAvDpC,IAAmB,EAAS,EAAA,EAwDP,EA3ChB,EAbc,EAwDP,GA1CV,IAZD,SAAS,IACJ,EAAU,GACb,KAEA,sBAAsB,GAClB,EAAQ,QACX,EAAQ,UAQV,KA4CG,EAAe,GAoBnB,OAjBK,IACJ,EAAW,SAAS,MAvCtB,SAAS,EAAgB,EAAS,EAAc,GAC/C,GAAI,MAAM,QAAQ,IAAa,UAAY,aAAmB,SAC7D,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,OAAQ,IACnC,EAAgB,EAAQ,GAAI,EAAc,QAErC,GAAuB,iBAAZ,EACjB,EAAgB,SAAS,iBAAiB,GAAU,EAAc,QAC5D,GAAI,EAAQ,QAAqC,mBAApB,EAAQ,QAC3C,EAAgB,EAAQ,UAAW,EAAc,QAC3C,GAAI,SAAW,aAAmB,QAAQ,CAEhD,IAAI,EAAM,IAAI,EAAY,EAAS,GACnC,EAAa,KAAK,IA6BnB,CAAgB,EAAU,EAAc,GAGxC,EAAQ,KAAK,WACZ,IAAK,IAAI,EAAI,EAAG,EAAI,EAAa,OAAQ,IACxC,EAAa,GAAG,UAEjB,EAAe,KAEX,GACH,MAIK","file":"/npm/startaudiocontext@1.2.1/StartAudioContext.js","sourceRoot":"","sourcesContent":["/**\n * Minified by jsDelivr using UglifyJS v3.4.0.\n * Original file: /npm/startaudiocontext@1.2.1/StartAudioContext.js\n * \n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n","/**\n *  StartAudioContext.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2016 Yotam Mann\n */\n(function (root, factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine([], factory)\n\t } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory()\n\t} else {\n\t\troot.StartAudioContext = factory()\n  }\n}(this, function () {\n\n\t//TAP LISTENER/////////////////////////////////////////////////////////////\n\n\t/**\n\t * @class  Listens for non-dragging tap ends on the given element\n\t * @param {Element} element\n\t * @internal\n\t */\n\tvar TapListener = function(element, context){\n\n\t\tthis._dragged = false\n\n\t\tthis._element = element\n\n\t\tthis._bindedMove = this._moved.bind(this)\n\t\tthis._bindedEnd = this._ended.bind(this, context)\n\n\t\telement.addEventListener(\"touchstart\", this._bindedEnd)\n\t\telement.addEventListener(\"touchmove\", this._bindedMove)\n\t\telement.addEventListener(\"touchend\", this._bindedEnd)\n\t\telement.addEventListener(\"mouseup\", this._bindedEnd)\n\t}\n\n\t/**\n\t * drag move event\n\t */\n\tTapListener.prototype._moved = function(e){\n\t\tthis._dragged = true\n\t};\n\n\t/**\n\t * tap ended listener\n\t */\n\tTapListener.prototype._ended = function(context){\n\t\tif (!this._dragged){\n\t\t\tstartContext(context)\n\t\t}\n\t\tthis._dragged = false\n\t};\n\n\t/**\n\t * remove all the bound events\n\t */\n\tTapListener.prototype.dispose = function(){\n\t\tthis._element.removeEventListener(\"touchstart\", this._bindedEnd)\n\t\tthis._element.removeEventListener(\"touchmove\", this._bindedMove)\n\t\tthis._element.removeEventListener(\"touchend\", this._bindedEnd)\n\t\tthis._element.removeEventListener(\"mouseup\", this._bindedEnd)\n\t\tthis._bindedMove = null\n\t\tthis._bindedEnd = null\n\t\tthis._element = null\n\t};\n\n\t//END TAP LISTENER/////////////////////////////////////////////////////////\n\n\t/**\n\t * Plays a silent sound and also invoke the \"resume\" method\n\t * @param {AudioContext} context\n\t * @private\n\t */\n\tfunction startContext(context){\n\t\t// this accomplishes the iOS specific requirement\n\t\tvar buffer = context.createBuffer(1, 1, context.sampleRate)\n\t\tvar source = context.createBufferSource()\n\t\tsource.buffer = buffer\n\t\tsource.connect(context.destination)\n\t\tsource.start(0)\n\n\t\t// resume the audio context\n\t\tif (context.resume){\n\t\t\tcontext.resume()\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the audio context is started\n\t * @param  {AudioContext}  context\n\t * @return {Boolean}\n\t * @private\n\t */\n\tfunction isStarted(context){\n\t\t return context.state === \"running\"\n\t}\n\n\t/**\n\t * Invokes the callback as soon as the AudioContext\n\t * is started\n\t * @param  {AudioContext}   context\n\t * @param  {Function} callback\n\t */\n\tfunction onStarted(context, callback){\n\n\t\tfunction checkLoop(){\n\t\t\tif (isStarted(context)){\n\t\t\t\tcallback()\n\t\t\t} else {\n\t\t\t\trequestAnimationFrame(checkLoop)\n\t\t\t\tif (context.resume){\n\t\t\t\t\tcontext.resume()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isStarted(context)){\n\t\t\tcallback()\n\t\t} else {\n\t\t\tcheckLoop()\n\t\t}\n\t}\n\n\t/**\n\t * Add a tap listener to the audio context\n\t * @param  {Array|Element|String|jQuery} element\n\t * @param {Array} tapListeners\n\t */\n\tfunction bindTapListener(element, tapListeners, context){\n\t\tif (Array.isArray(element) || (NodeList && element instanceof NodeList)){\n\t\t\tfor (var i = 0; i < element.length; i++){\n\t\t\t\tbindTapListener(element[i], tapListeners, context)\n\t\t\t}\n\t\t} else if (typeof element === \"string\"){\n\t\t\tbindTapListener(document.querySelectorAll(element), tapListeners, context)\n\t\t} else if (element.jquery && typeof element.toArray === \"function\"){\n\t\t\tbindTapListener(element.toArray(), tapListeners, context)\n\t\t} else if (Element && element instanceof Element){\n\t\t\t//if it's an element, create a TapListener\n\t\t\tvar tap = new TapListener(element, context)\n\t\t\ttapListeners.push(tap)\n\t\t} \n\t}\n\n\t/**\n\t * @param {AudioContext} context The AudioContext to start.\n\t * @param {Array|String|Element|jQuery=} elements For iOS, the list of elements\n\t *                                               to bind tap event listeners\n\t *                                               which will start the AudioContext. If\n\t *                                               no elements are given, it will bind\n\t *                                               to the document.body.\n\t * @param {Function=} callback The callback to invoke when the AudioContext is started.\n\t * @return {Promise} The promise is invoked when the AudioContext\n\t *                       is started.\n\t */\n\tfunction StartAudioContext(context, elements, callback){\n\n\t\t//the promise is invoked when the AudioContext is started\n\t\tvar promise = new Promise(function(success) {\n\t\t\tonStarted(context, success)\n\t\t})\n\n\t\t// The TapListeners bound to the elements\n\t\tvar tapListeners = []\n\n\t\t// add all the tap listeners\n\t\tif (!elements){\n\t\t\telements = document.body\n\t\t}\n\t\tbindTapListener(elements, tapListeners, context)\n\n\t\t//dispose all these tap listeners when the context is started\n\t\tpromise.then(function(){\n\t\t\tfor (var i = 0; i < tapListeners.length; i++){\n\t\t\t\ttapListeners[i].dispose()\n\t\t\t}\n\t\t\ttapListeners = null\n\n\t\t\tif (callback){\n\t\t\t\tcallback()\n\t\t\t}\n\t\t})\n\n\t\treturn promise\n\t}\n\n\treturn StartAudioContext\n}))"]}